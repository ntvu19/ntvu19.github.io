import{_ as e,e as r,g as a,o as d}from"./app-DFqNa0KN.js";const o={};function i(n,t){return d(),r("div",null,t[0]||(t[0]=[a('<h1 id="this-is-only-a-sample-data" tabindex="-1"><a class="header-anchor" href="#this-is-only-a-sample-data"><span>This is only a sample data</span></a></h1><table><thead><tr><th>Algorithm</th><th>Time Complexity</th><th>Space Complexity</th><th>Description</th></tr></thead><tbody><tr><td>Binary Search</td><td>O(log n)</td><td>O(1)</td><td>Efficient search algorithm for sorted arrays</td></tr><tr><td>Quick Sort</td><td>O(n log n)</td><td>O(log n)</td><td>Divide and conquer sorting algorithm</td></tr><tr><td>Merge Sort</td><td>O(n log n)</td><td>O(n)</td><td>Stable sorting algorithm using divide and conquer</td></tr><tr><td>Bubble Sort</td><td>O(nÂ²)</td><td>O(1)</td><td>Simple but inefficient sorting algorithm</td></tr><tr><td>Linear Search</td><td>O(n)</td><td>O(1)</td><td>Basic search algorithm for unsorted arrays</td></tr></tbody></table>',2)]))}const s=e(o,[["render",i],["__file","index.html.vue"]]),m=JSON.parse(`{"path":"/algorithm/competitive-programmer-handbook/","title":"Competitive Programmer's Handbook","lang":"en-US","frontmatter":{"lang":"en-US","title":"Competitive Programmer's Handbook","head":[["title",{},"Competitive Programmer's Handbook - Vu T. Nguyen"]]},"headers":[],"git":{},"filePathRelative":"algorithm/competitive-programmer-handbook/index.md"}`);export{s as comp,m as data};
